// @generated by protobuf-ts 2.11.0
// @generated from protobuf file "tracer.proto" (package "tfc.tracer", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ObservationSpanController } from "./tracer";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateOtelSpanResponse } from "./tracer";
import type { CreateOtelSpanRequest } from "./tracer";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service tfc.tracer.ObservationSpanController
 */
export interface IObservationSpanControllerClient {
    /**
     * @generated from protobuf rpc: CreateOtelSpan
     */
    createOtelSpan(input: CreateOtelSpanRequest, options?: RpcOptions): UnaryCall<CreateOtelSpanRequest, CreateOtelSpanResponse>;
}
/**
 * @generated from protobuf service tfc.tracer.ObservationSpanController
 */
export class ObservationSpanControllerClient implements IObservationSpanControllerClient, ServiceInfo {
    typeName = ObservationSpanController.typeName;
    methods = ObservationSpanController.methods;
    options = ObservationSpanController.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateOtelSpan
     */
    createOtelSpan(input: CreateOtelSpanRequest, options?: RpcOptions): UnaryCall<CreateOtelSpanRequest, CreateOtelSpanResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateOtelSpanRequest, CreateOtelSpanResponse>("unary", this._transport, method, opt, input);
    }
}
